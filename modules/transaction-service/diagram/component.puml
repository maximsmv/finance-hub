@startuml
package "transaction-service" {
    [TransactionRestControllerV1]
    [WalletRestControllerV1]
    [GlobalExceptionHandler (@ControllerAdvice)]

    [TransactionService]
    [WalletService]
    [WalletTypeService]
    [CalculationFeeService]

    [TransactionValidation]
    [WalletValidation]

    [PaymentRequestRepository]
    [TransferOperationRepository]
    [WalletRepository]
    [WalletTypeRepository]

    [DepositRequestedProducer]
    [WithdrawalRequestedProducer]
    [DepositCompletedListener]
    [WithdrawalCompletedListener]
    [WithdrawalFailedListener]

    [ActuatorEndpoints]
    [OpenTelemetry]
    [Logback (OpenTelemetryAppender)]
    [JPA]
    [Hibernate Envers (Добавлю в след. версии)]
}

package "Infrastructure" {
    [PostgreSQL]
    [Kafka]
}

package "Monitoring" {
    [Alloy]
    [Prometheus]
    [Loki]
    [Tempo]
    [Grafana]
}

package "Deployment" {
    [Docker]
    [TestContainers]
}

package "Testing" {
    [JUnit 5]
    [Mockito]
}

[TransactionRestControllerV1] --> [TransactionService] : Обрабатывает HTTP запросы
[WalletRestControllerV1] --> [WalletService] : Обрабатывает HTTP запросы

[TransactionService] --> [WalletService] : Получение данных о кошельках
[TransactionService] --> [CalculationFeeService] : Подсчет комиссии по платежам
[TransactionService] --> [TransactionValidation] : Валидация запоросов по платежам
[TransactionService] --> [PaymentRequestRepository] : Управление платежами
[TransactionService] --> [TransferOperationRepository] : Управление операций по трансферу
[TransactionService] --> [DepositRequestedProducer] : Отправка события о подтверждении пополнения кошелька
[TransactionService] --> [WithdrawalRequestedProducer] : Отправка события о подтверждении списания с кошелька

[WalletService] --> [WalletRepository] : Управление кошельками
[WalletService] --> [WalletValidation] : Валидация кошельков для операций

[WalletTypeService] --> [WalletTypeRepository] : Получение типов кошельков

[DepositRequestedProducer] --> [Kafka] : Регистрация события о подтверждении пополнения кошелька
[WithdrawalRequestedProducer] --> [Kafka] : Регистрация события о подтверждении списания с кошелька

[DepositCompletedListener] --> [Kafka] : Чтение события о завершении операций пополнения кошелька
[WithdrawalCompletedListener] --> [Kafka] : Чтение события о подтверждении списания с кошелька
[WithdrawalFailedListener] --> [Kafka] : Чтение события о ошибке списания с кошелька

[DepositCompletedListener] --> [PaymentRequestRepository] : Обновление информации по платежу
[WithdrawalCompletedListener] --> [PaymentRequestRepository] : Обновление информации по платежу
[WithdrawalFailedListener] --> [PaymentRequestRepository] : Обновление информации по платежу

[DepositCompletedListener] --> [WalletService] : Проведение операции
[WithdrawalCompletedListener] --> [WalletService] : Проведение операции
[WithdrawalFailedListener] --> [WalletService] : Проведение операции

[PaymentRequestRepository] ..> [JPA] : Доступ к данным
[TransferOperationRepository] ..> [JPA] : Доступ к данным
[WalletRepository] ..> [JPA] : Доступ к данным
[WalletTypeRepository] ..> [JPA] : Доступ к данным

[PaymentRequestRepository] ..> [Hibernate Envers (Добавлю в след. версии)] : Аудит изменений
[TransferOperationRepository] ..> [Hibernate Envers (Добавлю в след. версии)] : Аудит изменений
[WalletRepository] ..> [Hibernate Envers (Добавлю в след. версии)] : Аудит изменений

[JPA] --> [PostgreSQL] : Хранилище данных
[Hibernate Envers (Добавлю в след. версии)] --> [JPA] : Использует для записи аудита

[Prometheus] --> [ActuatorEndpoints] : Забор метрик
[OpenTelemetry] --> [OTel Collector] : Отправка трасс
[Logback (OpenTelemetryAppender)] --> [OTel Collector] : Отправка логов

[Alloy] --> [Tempo] : Отправка трасс
[Alloy] --> [Loki] : Отправка логов
[Tempo] --> [Grafana] : Просмотр трасс
[Loki] --> [Grafana] : Просмотр логов
[Prometheus] --> [Grafana] : Просмотр метрик

[transaction-service] --> [Docker] : Развертывание
[TransactionService] --> [JUnit 5] : Юнит-тесты
[TransactionService] --> [Mockito] : Мокирование зависимостей
[WalletService] --> [JUnit 5] : Юнит-тесты
[WalletService] --> [Mockito] : Мокирование зависимостей
[transaction-service] --> [TestContainers] : Интеграционные тесты
@enduml