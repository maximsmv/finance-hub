plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.advanced'
version = '1.0.0'
description = 'Transaction Service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven {
		url = System.getenv('ARTIFACTORY_URL') ?: 'http://localhost:8092/artifactory/libs-release-local/'
		allowInsecureProtocol = true
		credentials {
			username = System.getenv('ARTIFACTORY_USER') ?: 'person-service'
			password = System.getenv('ARTIFACTORY_PASSWORD') ?: 'Person_service1'
		}
	}
	mavenCentral()
}

ext {
	set('opentelemetryVersion', "2.16.0")
}

dependencies {
	implementation project(':transaction-api-contract')
	implementation 'com.advanced:kafka-contracts:1.0.1'

	// ------------------------------ SPRING ------------------------------
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	// ------------------------------ DATASOURCE ------------------------------
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.postgresql:postgresql'

	// ------------------------------ OTel ------------------------------
	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'

	// ------------------------------ METRIC ------------------------------
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// ------------------------------ DEVTOOLS ------------------------------
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// ------------------------------ UTIL ------------------------------
	implementation 'org.mapstruct:mapstruct:1.6.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	// ------------------------------ TEST ------------------------------
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:${opentelemetryVersion}"
	}
}

tasks.named('build') {
	dependsOn(':transaction-api-contract:publish')
}

tasks.named('test') {
	useJUnitPlatform()
}
