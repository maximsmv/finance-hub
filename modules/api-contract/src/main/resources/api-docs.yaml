openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/users/{id}:
    get:
      tags:
      - user-rest-controller-v-1
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/ErrorValidationResponse"
                - $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
    put:
      tags:
      - user-rest-controller-v-1
      operationId: updateUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/ErrorValidationResponse"
                - $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
    delete:
      tags:
      - user-rest-controller-v-1
      operationId: deleteUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/ErrorValidationResponse"
                - $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
  /api/v1/users:
    post:
      tags:
      - user-rest-controller-v-1
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/ErrorValidationResponse"
                - $ref: "#/components/schemas/ErrorResponse"
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
  /api/v1/countries:
    get:
      tags:
      - country-rest-controller-v-1
      operationId: getUserById_1
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/ErrorValidationResponse"
                - $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CountryDto"
    post:
      tags:
      - country-rest-controller-v-1
      operationId: createCountry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountryDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/ErrorValidationResponse"
                - $ref: "#/components/schemas/ErrorResponse"
        "201":
          description: Created
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        status:
          type: integer
          format: int32
    ErrorValidationResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
          format: int32
        errors:
          type: array
          items:
            $ref: "#/components/schemas/FieldErrorResponse"
    FieldErrorResponse:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    AddressDto:
      required:
      - archived
      - country
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        country:
          $ref: "#/components/schemas/CountryDto"
        address:
          maxLength: 128
          minLength: 0
          type: string
        zipCode:
          maxLength: 32
          minLength: 0
          type: string
        archived:
          type: string
          format: date-time
        city:
          maxLength: 32
          minLength: 0
          type: string
        state:
          maxLength: 32
          minLength: 0
          type: string
    CountryDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 32
          minLength: 0
          type: string
        alpha2:
          maxLength: 2
          minLength: 0
          type: string
        alpha3:
          maxLength: 3
          minLength: 0
          type: string
        status:
          maxLength: 32
          minLength: 0
          type: string
    IndividualDto:
      required:
      - archivedAt
      - verifiedAt
      type: object
      properties:
        id:
          type: string
          format: uuid
        passportNumber:
          maxLength: 32
          minLength: 0
          type: string
        phoneNumber:
          maxLength: 32
          minLength: 0
          type: string
        email:
          maxLength: 32
          minLength: 0
          type: string
        verifiedAt:
          type: string
          format: date-time
        archivedAt:
          type: string
          format: date-time
        status:
          maxLength: 32
          minLength: 0
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        secretKey:
          maxLength: 32
          minLength: 0
          type: string
        email:
          maxLength: 1024
          minLength: 0
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        firstName:
          maxLength: 32
          minLength: 0
          type: string
        lastName:
          maxLength: 32
          minLength: 0
          type: string
        filled:
          type: boolean
        address:
          $ref: "#/components/schemas/AddressDto"
        individual:
          $ref: "#/components/schemas/IndividualDto"
